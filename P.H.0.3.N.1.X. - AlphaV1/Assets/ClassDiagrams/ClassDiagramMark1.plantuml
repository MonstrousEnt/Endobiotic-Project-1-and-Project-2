@startuml Class Diagram Mark 1
title Endobiotic UML Class Digram - Mark 1\n<color:Gray>Monstrous | Endobiotic | 04/2/2023</color>

package Scripts <<Folder>> 
{
    package Interfaces <<Folder>>
    {
        package InteractableInterfaces <<Folder>>
        {
            interface IPrerequisite 
            {
                <b>Interface Methods
                +IsComplete(): void
                ---
            }
        }
    }

    package Interactables <<Folder>> 
    {
        Interactable <|-- IPrerequisite

        class EffectAudioManagerGameEvent
        {
            <b>Audio Data
            -m_audioData: AudioDataScriptableObject
            -m_audioList: AudioListScriptableObject

            ===
            <b>Game Event Scriptable Objects - Audio Manager
            -m_audioManagerGameEventPlaySound: AudioDataGameEventScriptableObject
            -m_audioManagerGameEventPlayRandomSound: AudioDataGameEventScriptableObject
            -m_audioManagerGameEventStopSound: AudioDataGameEventScriptableObject
            -m_audioManagerGameEventEnableLoop: AudioDataGameEventScriptableObject
            -m_audioManagerGameEventDisableLoop: AudioDataGameEventScriptableObject

            ===
            <b>Call Audio Manager Game Events
            +PlaySound(): void
            +PlayRandomSound(): void
            +StopSound(): void
            +EnableLoop(): void
            +DisableLoop(): void
        }

        class EffectChangeSprite 
        {
            <b>Sprites
            -m_defaultState: Sprite
            -m_newState: Sprite

            ===
            <b>Components
            -m_spriteRenderer: SpriteRenderer

            ===
            <b>Unity Methods
            -Awake(): void
            -Start(): void

            ====
            <b>Sprite Changes Methods
            +ChangeSprite(): void
        }

        class EffectDisableCollider 
        {
            <b>Delay
            -m_delay: float

            ===
            <b>Collier 2D
            -m_collider: Collider2D

            ===
            <b>Disable Collier Methods
            +DisableCollider(): void
            -disableColliderAfterDelay(): void
        }

        class EffectDisableObject 
        {
            <b>Disable Game Object Methods
            +DisableObject(): void
        }

        class EffectPickupItem 
        {
            <b>Tag Scriptable Object
            -m_tagDataPlayer: TagDataScriptableObject

            ===
            <b>Components
            -m_spriteRenderer: SpriteRenderer
            -m_interactable: Interactable
            -m_characterItemHolder: CharacterItemHolder

            ===
            <b>Unity Methods
            -Awake(): void

            ===
            <b>Items Methods
            +PickupItem(): void
            +ReturnItem(): void
        }

        class EffectPlayAnimation 
        {
            <b>Animation States
            -m_animationName: string

            ===
            <b>Animation Methods
            +PlayAnimation(): void
        }

        class EffectSpawnObject
        {
            <b>Components
            -m_objectPrefab: GameObject
            -m_locationOffset: Vector3

            ===
            <b>Spawn Object Methods
            +SpawnObject(): void
        }

        class EffectUseItem 
        {
            <b>Tag Scriptabe Object
            -m_tagDataPlayer: TagDataScriptableObject

            ===
            <b>Item Methods
            +UseItem(): void
        }
        
        class Interactable 
        {
            <b>Required Form
            -m_requiredForm: Form

            ===
            <b>Unity Events
            -m_onActivated: UnityEvent

            ===
            <b>Lists
            -m_prerequisites: List<Interactable>

            ===
            <b>Intractable
            -m_isInteractable: bool
            -m_hasInteracted: bool
            -m_interactableSpriteController: InteractableSpriteController

            ===
            <b>Getters and Setters
            +SetPrerequisiteComplete(): void
            -checkSetActive(): void

            ===
            <b>Interface Methods
            +IsComplete(): void 

            ===
            <b>Unity Methods
            -Awake(): void
            -Start(): void


            ===
            <b>Intractable Methods
            +Interact(Form a_currForm): void
            +Reenable(): void
            +updateSprite(): void
            +checkIfPrerequisitesMet(): void
            +subscribeToPrerequisites(): void
        }

        class InteractableSpriteController
        {
            <b>Intractable Boolean Flag for Sprite
            -m_useInteractableSpriteController: bool

            ===
            <b>Intractable Sprite
            -m_nonInteractableSprite: Sprite
            -m_isInteractableSprite: Sprite
            -m_hasInteractedSprite: Sprite

            ===
            <b>Components
            -m_spriteRenderer: SpriteRenderer

            ===
            <b>Unity Methods
            -Awake(): void
            -Start(): void

            ===
            <b>Sprite Methods
            +ChangeSprite(bool a_isActive, bool a_hasActivated): void

            ===
            Animation Methods
            -disableAnimatorIfNeeded(): void
        }

        class UITryAgainMenuOpenTrigger 
        {
            <b>Unity Events
            -m_enbaleTryAgainMenuUjnityEvent: UnityEvent

            ===
            <b>Unity Methods
            -OnTriggerEnter2D(Collider2D a_collision): void
        }
    }

    package PhysicsInteractions <<Folder>>
    {
        class PushableObject
        {
            <b>Form
            -m_requiredForm: Form
            
            ===
            <b>Intractable
            -m_objectType: InteractableOjbects 

            ===
            <b>Pit Trap Data
            -m_destroyOnceUsed: bool

            ===
            <b>Unity Events
            -m_soundEffectUnityEvent: UnityEvent

            ===
            <b>Unity Methods
            -Awake(): void
            -OnCollisionEnter2D(Collision2D a_collision): void
        }

        class TrapObject 
        {
            <b>Intractable
            -m_objectType: InteractableOjbects

            ===
            <b>Sprite
            -m_hasActivatedSprite: Sprite

            ===
            <b>Unity Events
            -m_addPointUnityEvent: UnityEvent

            ===
            <b>Sprite - Non-Serialize Field
            -m_spriteRenderer: SpriteRenderer

            ===
            <b>Trap
            m_trapCollider: Collider2D

            ===
            <b>Unity Methods 
            -Awake(): void

            ===
            <b>Intractable Methods
            +Interact(): void
            +GetObjectType(): InteractableOjbects
        }
    }

    package ScriptableObject <<Folder>> 
    {
        package DataContainers <<Folder>> 
        {
            class AudioDataScriptableObject 
            {
                <b>Class Variable
                -m_clip: AudioClip
                -m_audioGameObjectName: string
                -m_volume: float
                -m_pitch: float
                -m_loop: bold
                -m_playOnAwake: bool
                -m_source: AudioSource

                ===
                <b>Getters and Setters
                +clip: AudioClip
                +audioGameObjectName: string
                +volume: float
                +pitch: float
                +loop: bold
                +playOnAwake: bool
                +source: AudioSource

                ===
                <b>Unity Methods
                -OnEnable(): void
            }

            class LevelDataScriptableObject 
            {
                <b>Class Variables
                -m_levelID: string
                -m_levelName: string
                -m_buildIndex: int
                -m_unlockLevel: bool

                ===
                <b>Getters and Setters
                +levelID: string
                +levelName: string
                +buildIndex: int
                +unlockLevel: bool
            }

            class PopUpDataScriptableObject 
            {
                <b>Class Variables 
                -m_message: string
                -m_isConfirm: bool
                -m_isReadyToClose: bool
                -m_popUpActionUnityEvent: UnityEvent

                ===
                <b>Getters and Setters 
                +message: string
                +isConfirm: bool
                +isReadyToClose: bool
                +popUpActionUnityEvent: UnityEvent
            }

            class TimerDataScriptableObject 
            {
                <b>Class Variables
                -m_timeInSeconds: float
                -m_timerMode: TimerMode
                -m_startTimeInSeconds: float
                -m_startTimer: bool
                -m_UpdateUI: bool

                ===
                <b>Getters and Setters
                +timeInSeconds: float
                +timerMode: TimerMode
                +startTimeInSeconds: float
                +startTimer: bool
                +UpdateUI: bool

                ===
                <b>Reset Data Methods
                +Reset(): void

                ===
                <b>Unity Methods
                -OnEnable(): void
            }
        }

        package GameEvents <<Folder>> 
        {
            package Void <<Folder>> 
            {
                class VoidGameEventScriptableObject 
                {
                    <b>Class Variables
                    -m_listeners: VoidGameEventListener

                    ===
                    <b>Registration Listener
                    +RegisterListener(VoidGameEventListener listener): void
                    +UnregisterListener(VoidGameEventListener listener): void

                    ===
                    <b>Raise/Invoke Game Events
                    +Raise(): void
                }

                class VoidGameEventListener 
                {
                    <b>Game Event Scriptable Object
                    -m_gameEvent: VoidGameEventScriptableObject

                    ===
                    <b>Unity Event
                    -m_response: UnityEvent

                    ===
                    <b>Invoke Unity Events
                    +OnEventRaised(): void

                    ===
                    <b>Unity Methods
                    -OnEnable(): void
                    -nDisable(): void
                }
            }

            package GameManagerSO <<Folder>> 
            {
                package AudioManager <<Folder>> 
                {
                    package AudioData <<Folder>> 
                    {
                        class AudioDataGameEventScriptableObject 
                        {
                             <b>Class Variables
                            -m_listeners: AudioDataGameEventListener

                            ===
                            <b>Registration Listener
                            +RegisterListener(AudioDataGameEventListener listener): void
                            +UnregisterListener(AudioDataGameEventListener listener): void

                            ===
                            <b>Raise/Invoke Game Events
                            +Raise(AudioDataScriptableObject a_audioData): void
                        }

                        class AudioDataGameEventListener 
                        {
                            <b>Game Event Scriptable Object
                            -m_gameEvent: AudioDataScriptableObject

                            ===
                            <b>Unity Event
                            -m_response: UnityEvent<AudioDataScriptableObject>

                            ===
                            <b>Invoke Unity Events
                            +OnEventRaised(AudioDataScriptableObject a_audioData): void

                            ===
                            <b>Unity Methods
                            -OnEnable(): void
                            -nDisable(): void
                        }
                    }

                    package AudioList <<Folder>> 
                    {
                         class AudioListGameEventScritableObject 
                        {
                             <b>Class Variables
                            -m_listeners: AudioListGameEventListener

                            ===
                            <b>Registration Listener
                            +RegisterListener(AudioListGameEventListener listener): void
                            +UnregisterListener(AudioListGameEventListener listener): void

                            ===
                            <b>Raise/Invoke Game Events
                            +Raise(AudioListScriptableObject a_audioList): void
                        }

                        class AudioListGameEventListener 
                        {
                            <b>Game Event Scriptable Object
                            -m_gameEvent: AudioListGameEventScritableObject

                            ===
                            <b>Unity Event
                            -m_response: UnityEvent<AudioListScriptableObject>

                            ===
                            <b>Invoke Unity Events
                            +OnEventRaised(AudioListScriptableObject a_audioList): void

                            ===
                            <b>Unity Methods
                            -OnEnable(): void
                            -nDisable(): void
                        }
                    }
                }

                package LevelManager <<Folder>>
                {
                    package LevelData <<Folder>> 
                    {
                        class LevelDataGameEventScriptableObject 
                        {
                             <b>Class Variables
                            -m_listeners: LevelDataGameEventListener

                            ===
                            <b>Registration Listener
                            +RegisterListener(LevelDataGameEventListener listener): void
                            +UnregisterListener(LevelDataGameEventListener listener): void

                            ===
                            <b>Raise/Invoke Game Events
                            +Raise(LevelDataGameEventScriptableObject a_levelData): void
                        }

                        class LevelDataGameEventListener 
                        {
                            <b>Game Event Scriptable Object
                            -m_gameEvent: LevelDataGameEventListener

                            ===
                            <b>Unity Event
                            -m_response: UnityEvent<LevelDataScriptableObject>

                            ===
                            <b>Invoke Unity Events
                            +OnEventRaised(LevelDataGameEventScriptableObject a_levelData): void

                            ===
                            <b>Unity Methods
                            -OnEnable(): void
                            -nDisable(): void
                        }
                    }
                }

                package TimerManager <<Folder>> 
                {
                    package TimerData <<Folder>> 
                    {
                        class TimerDataGameEventScriptableObject 
                        {
                            <b>Class Variables
                            -m_listeners: TimerDataGameEventListener

                            ===
                            <b>Registration Listener
                            +RegisterListener(TimerDataGameEventListener listener): void
                            +UnregisterListener(TimerDataGameEventListener listener): void

                            ===
                            <b>Raise/Invoke Game Events
                            +Raise(TimerDataScriptableObject a_timerData): void
                        }

                        class TimerDataGameEventListener 
                        {
                            <b>Game Event Scriptable Object
                            -m_gameEvent: TimerDataGameEventScriptableObject

                            ===
                            <b>Unity Event
                            -m_response: UnityEvent<TimerDataScriptableObject>

                            ===
                            <b>Invoke Unity Events
                            +OnEventRaised(TimerDataScriptableObject a_timerData): void

                            ===
                            <b>Unity Methods
                            -OnEnable(): void
                            -nDisable(): void
                        }
                    }
                }

                package UIManager <<Folder>> 
                {
                    package PopUpData <<Folder>> 
                    {
                        class PopUpDataGameEventScriptableObject 
                        {
                            <b>Class Variables
                            -m_listeners: PopUpDataGameEventListener

                            ===
                            <b>Registration Listener
                            +RegisterListener(PopUpDataGameEventListener listener): void
                            +UnregisterListener(PopUpDataGameEventListener listener): void

                            ===
                            <b>Raise/Invoke Game Events
                            +Raise(PopUpDataScriptableObject a_popUpData): void
                        }

                        class PopUpDataGameEventListener 
                        {
                            <b>Game Event Scriptable Object
                            -m_gameEvent: PopUpDataGameEventScriptableObject

                            ===
                            <b>Unity Event
                            -m_response: UnityEvent<PopUpDataScriptableObject>

                            ===
                            <b>Invoke Unity Events
                            +OnEventRaised(PopUpDataScriptableObject a_popUpData): void

                            ===
                            <b>Unity Methods
                            -OnEnable(): void
                            -nDisable(): void
                        }
                    }
                }
            }
        }

        package GlobalVariables <<Folder>>
        {
            class BooleanFlagGlobalVariableScriptableObject 
            {
                <b>Class Variables
                -m_booleanFlag: bool 

                ===
                <b>Getters and Setters
                +booleanFlag: bool 
                +EnableBoolFlag(): void
                +DisableBooleanFlag(): void
            }
        }

        package ID <<Folder>> 
        {
            class GuildIDScriptableObject 
            {
                <b>Class Variables
                -m_guildID: string

                ===
                <b>Generate Methods
                +GenerateID(): void
            }
        }

        package Lists <<Folder>> 
        {
            class AudioListScriptableObject
            {
                <b>Class Variables
                -m_audioDatas: List<AudioDataScriptableObject>

                ===
                <b>Getters and Setters
                +audioDatas: List<AudioDataScriptableObject>
            }

            class LevelListScriptableObject 
            {
                <b>Class Variables
                -m_levelDatas: List<LevelDataScriptableObject>

                ===
                <b>Getters and Setters
                +levelDatas: List<LevelDataScriptableObject>
                +GetLevelById(string a_id): int
            }
        }

        package Tag <<Folder>> 
        {
            class TagDataScriptableObject 
            {
                <b>Class Variables
                -m_tagName: string

                ===
                <b>Getters and Setters
                +tagName: string
            }
        }
    } 

    package Structs <<Folder>>
    {
        package EnemyStructs <<Folder>>
        {
            struct Robot 
            {
                +Robot(Form a_form, Vector3 a_position):

                ===
                +formRobot: Form
                +positionRobot: Vector3
            }
        }
    }

    package UI <<Folder>>
    {
        abstract class UIBase 
        {
            <b>Main Window Data
            #m_mainWindowGameObject: GameObject

            ===
            <b>UI Base - UI Main Window Methods
            +EnableMainWindow(): void
            +DisableMainWindow(): void
        }

        package FadeBackground <<Folder>> 
        {
            UIFadeBackground <|-- UIBase

            class UIFadeBackground 
            {

            }
        }

        package Menus <<Folder>> 
        {
             UIMenuBase <|-- UIBase

            package PauseMenu <<Folder>>
            {
                UIPauseMenu <|-- UIMenuBase

                class UIPauseMenu 
                {
                    <b>Boolean Flag Global Variable Scriptable Object - UI Manager
                    -m_booleanFlagGlobalVariableUIManagerPauseMenuIsActive: BooleanFlagGlobalVariableScriptableObject

                    ===
                    <b>UI Base - Override Methods - Pause Menu
                    +EnableMenu(): void
                    +DisableMenu(): void

                    ===
                    <b>UI Methods
                    +ResumeGame(): void
                }
            }

            package TryAgainMenu <<Folder>> 
            {
                UITryAgainMenu <|-- UIMenuBase

                class UITryAgainMenu 
                {
                    <b>Point System
                    -m_piontSystem: UIPiontSystem

                    ===
                    <b>Unity Event
                    -m_restartLevelUnityEvent: UnityEvent
                    -m_loadNextScenceUnityEvent: UnityEvent

                    ===
                    <b>UI Base - Override Methods - Try Again Menu
                    +EnableMenu(): void

                    ===
                    <b>UI Methods
                    +TryAgin(): void
                }
                
            }

            abstract class UIMenuBase 
            {
                <b>UI Components
                #m_firstButtonGameObject: GameObject

                ===
                <b>Global Variable Scriptable Object - Player Manager
                #m_booleanFlagGlobalVariablePlayerManagerPlayerCanMove: BooleanFlagGlobalVariableScriptableObject

                ===
                <b>Game Events Scriptable Object - Settings Manager
                #m_voidGameEventSettingsManagerEnablePause: VoidGameEventScriptableObject
                #m_voidGameEventSettingsManagerDisablePause: VoidGameEventScriptableObject

                ===
                <b>Game Events Scriptable Object - UI Manager - Fade Background
                #m_voidGameEventUIManagerEnableFadeBackground: VoidGameEventScriptableObject
                #m_voidGameEventUIManagerDisableFadeBackground: VoidGameEventScriptableObject

                ===
                <b>Pop Up Data Scriptable Object
                #m_popUpDataQuitPopUp: PopUpDataScriptableObject

                ===
                <b>Game Events Scriptable Object - UI Manger - Pop Up
                #m_popUpDataGameEventUIMangerSetPopUpData: PopUpDataGameEventScriptableObject
                #m_voidGameEventUIManagerEnablePopUp: VoidGameEventScriptableObject

                ===
                <b>Getters and Setters
                #SetFirstButton(): void

                ===
                <b>UI Menu Base - UI Menu Methods 
                +EnableMenu(): void
                +DisableMenu(): void
                +OpenQuitPopUp(): void
            }
        }

        package PopUp <<Folder>> 
        {
              UIPopUp <|-- UIBase

            class PopUpActions 
            {
                <b>Unity Events
                -m_disablePopUpUnityEvent: UnityEvent

                ===
                <b>Pop Up Action Methods - Quit Game
                +QuitGame(): void
            }

            class UIPopUp
            {
                <b>UI Components
                -m_messageTextBox: TextMeshProUGUI
                -m_yesButtonGameObject: GameObject
                -m_noButtonGameObject: GameObject

                ===
                <b>Controller Inputs
                -m_popUpFirstButton: GameObject

                ===
                <b>Pop Up Data
                m_popUpData: PopUpDataScriptableObject

                ===
                <b>Getters and Setters
                +SetPopUpData(PopUpDataScriptableObject a_popUpData): void

                ===
                <b>Unity Methods
                -Update(): void

                ===
                <b>UI Pop Up Methods
                +EnablePopUp(): void
                +DisablePopUp(): void
                -displayPopUpData(): void
                -cleanUIData(): void

                ===
                <b>On Click Methods 
                +YesActionPopUpOnClick(): void
            }
        }

        package StratScreen <<Folder>> 
        {
            class UIStartScreen 
            {
                <b>Unity Event
                -m_startSoundtrackUnityEvent: UnityEvent
                -m_stopSoundtrackUnityEvent: UnityEvent
                -m_loadNextSceneUnityEvent: UnityEvent

                ===
                <b>Unity Methods
                -Start(): void
                -Update(): void
            }
        }

        package Timer <<Folder>> 
        {
            class UITimer 
            {
                <b>UI Components
                -m_timerText: TextMeshProUGUI
                
                ===
                <b>Time Data Scriptable Object
                -m_timerData: TimerDataScriptableObject

                ===
                <b>Unity Methods
                -Update(): void

                UI Methods
                -displayTime(float a_timeInSeconds): void
            }
        }
    }

    package Utility <<Folder>> 
    {
        class DestroyAfterSeconds 
        {
            <b>Duration Data
            -m_duration: float

            ===
            <b>Unity Methods
            -Start(): void

            ===
            <b>Destroy After Methods
            -destroyAfter(float a_duration): IEnumerator
        }
    }

    package Editor <<Folder>> 
    {
        package DataContainersE 
        {
            class AudioDataEditor 
            {
                <b>Class Variables
                -m_audioPreviewer: AudioSource

                ===
                <b>Custom Editor Methods - Buttons
                -playPreview(AudioSource a_source, AudioDataScriptableObject a_audioData): void
                -stopPreview(AudioSource a_source)

                ===
                <b>Unity Methods
                -OnEnable(): void
                -OnDisable(): void

                ===
                <b>Custom Editor View
                +OnInspectorGUI(): void
            }

            class LevelDataEditor 
            {
                <b>Custom Editor View
                +OnInspectorGUI(): void   
            }
        }

        package GlobalVariablesE 
        {
            class BooleanFlagGlobalVariableEditor 
            {
                <b>Serialized Property
                -m_booleanFlagSerializedProperty: SerializedProperty

                ===
                <b>Unity Methods
                -OnEnable(): void

                ===
                <b>Custom Editor View
                +OnInspectorGUI(): void   
            }
        }

        package IDE 
        {
            class GuildIDEditor 
            {
                <b>Serialized Property
                -m_guilDIDSerializedProperty: SerializedProperty

                ===
                <b>Unity Methods
                -OnEnable(): void

                ===
                <b>Custom Editor View
                +OnInspectorGUI(): void   
            }
        }

        package ListsE 
        {
            class AudioListEditor 
            {
                <b>Serialized Property
                -m_audioDatasSerializedProperty: SerializedProperty

                ===
                <b>Unity Methods
                -OnEnable(): void

                ===
                <b>Custom Editor View
                +OnInspectorGUI(): void  
            }

            class LevelListEditor 
            {
                <b>Serialized Property
                -m_levelDatasSerializedProperty: SerializedProperty

                ===
                <b>Unity Methods
                -OnEnable(): void

                ===
                <b>Custom Editor View
                +OnInspectorGUI(): void 
            }
        }

        package TagE 
        {
            class TagDataEditor
            {
                <b>Custom Editor View
                +OnInspectorGUI(): void 
            }
        }
    }
}

@enduml